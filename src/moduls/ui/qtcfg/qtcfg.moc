/****************************************************************************
** QTCFG::LineEdit meta object code from reading C++ file 'qtcfg.h'
**
** Created: Sun Jun 5 11:32:40 2005
**      by: The Qt MOC ($Id$)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "qtcfg.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *QTCFG::LineEdit::className() const
{
    return "QTCFG::LineEdit";
}

QMetaObject *QTCFG::LineEdit::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QTCFG__LineEdit( "QTCFG::LineEdit", &QTCFG::LineEdit::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QTCFG::LineEdit::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::LineEdit", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QTCFG::LineEdit::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::LineEdit", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QTCFG::LineEdit::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_0 = {"changed", 1, param_slot_0 };
    static const QUMethod slot_1 = {"applySlot", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "changed(const QString&)", &slot_0, QMetaData::Private },
	{ "applySlot()", &slot_1, QMetaData::Private }
    };
    static const QUMethod signal_0 = {"apply", 0, 0 };
    static const QUMethod signal_1 = {"cancel", 0, 0 };
    static const QUParameter param_signal_2[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod signal_2 = {"textChanged", 1, param_signal_2 };
    static const QMetaData signal_tbl[] = {
	{ "apply()", &signal_0, QMetaData::Public },
	{ "cancel()", &signal_1, QMetaData::Public },
	{ "textChanged(const QString&)", &signal_2, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"QTCFG::LineEdit", parentObject,
	slot_tbl, 2,
	signal_tbl, 3,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QTCFG__LineEdit.setMetaObject( metaObj );
    return metaObj;
}

void* QTCFG::LineEdit::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QTCFG::LineEdit" ) )
	return this;
    return QWidget::qt_cast( clname );
}

// SIGNAL apply
void QTCFG::LineEdit::apply()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

// SIGNAL cancel
void QTCFG::LineEdit::cancel()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

// SIGNAL textChanged
void QTCFG::LineEdit::textChanged( const QString& t0 )
{
    activate_signal( staticMetaObject()->signalOffset() + 2, t0 );
}

bool QTCFG::LineEdit::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: changed((const QString&)static_QUType_QString.get(_o+1)); break;
    case 1: applySlot(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QTCFG::LineEdit::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: apply(); break;
    case 1: cancel(); break;
    case 2: textChanged((const QString&)static_QUType_QString.get(_o+1)); break;
    default:
	return QWidget::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool QTCFG::LineEdit::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool QTCFG::LineEdit::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QTCFG::DateTimeEdit::className() const
{
    return "QTCFG::DateTimeEdit";
}

QMetaObject *QTCFG::DateTimeEdit::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QTCFG__DateTimeEdit( "QTCFG::DateTimeEdit", &QTCFG::DateTimeEdit::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QTCFG::DateTimeEdit::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::DateTimeEdit", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QTCFG::DateTimeEdit::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::DateTimeEdit", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QTCFG::DateTimeEdit::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ 0, &static_QUType_varptr, "\x1c", QUParameter::In }
    };
    static const QUMethod slot_0 = {"changed", 1, param_slot_0 };
    static const QUMethod slot_1 = {"applySlot", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "changed(const QDateTime&)", &slot_0, QMetaData::Private },
	{ "applySlot()", &slot_1, QMetaData::Private }
    };
    static const QUMethod signal_0 = {"apply", 0, 0 };
    static const QUMethod signal_1 = {"cancel", 0, 0 };
    static const QUParameter param_signal_2[] = {
	{ 0, &static_QUType_varptr, "\x1c", QUParameter::In }
    };
    static const QUMethod signal_2 = {"valueChanged", 1, param_signal_2 };
    static const QMetaData signal_tbl[] = {
	{ "apply()", &signal_0, QMetaData::Public },
	{ "cancel()", &signal_1, QMetaData::Public },
	{ "valueChanged(const QDateTime&)", &signal_2, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"QTCFG::DateTimeEdit", parentObject,
	slot_tbl, 2,
	signal_tbl, 3,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QTCFG__DateTimeEdit.setMetaObject( metaObj );
    return metaObj;
}

void* QTCFG::DateTimeEdit::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QTCFG::DateTimeEdit" ) )
	return this;
    return QWidget::qt_cast( clname );
}

// SIGNAL apply
void QTCFG::DateTimeEdit::apply()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

// SIGNAL cancel
void QTCFG::DateTimeEdit::cancel()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

#include <qobjectdefs.h>
#include <qsignalslotimp.h>

// SIGNAL valueChanged
void QTCFG::DateTimeEdit::valueChanged( const QDateTime& t0 )
{
    if ( signalsBlocked() )
	return;
    QConnectionList *clist = receivers( staticMetaObject()->signalOffset() + 2 );
    if ( !clist )
	return;
    QUObject o[2];
    static_QUType_varptr.set(o+1,&t0);
    activate_signal( clist, o );
}

bool QTCFG::DateTimeEdit::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: changed((const QDateTime&)*((const QDateTime*)static_QUType_ptr.get(_o+1))); break;
    case 1: applySlot(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QTCFG::DateTimeEdit::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: apply(); break;
    case 1: cancel(); break;
    case 2: valueChanged((const QDateTime&)*((const QDateTime*)static_QUType_ptr.get(_o+1))); break;
    default:
	return QWidget::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool QTCFG::DateTimeEdit::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool QTCFG::DateTimeEdit::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QTCFG::ConfApp::className() const
{
    return "QTCFG::ConfApp";
}

QMetaObject *QTCFG::ConfApp::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QTCFG__ConfApp( "QTCFG::ConfApp", &QTCFG::ConfApp::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QTCFG::ConfApp::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::ConfApp", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QTCFG::ConfApp::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QTCFG::ConfApp", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QTCFG::ConfApp::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QMainWindow::staticMetaObject();
    static const QUMethod slot_0 = {"newW", 0, 0 };
    static const QUMethod slot_1 = {"pageUp", 0, 0 };
    static const QUMethod slot_2 = {"pagePrev", 0, 0 };
    static const QUMethod slot_3 = {"pageNext", 0, 0 };
    static const QUMethod slot_4 = {"pageRefresh", 0, 0 };
    static const QUMethod slot_5 = {"pageCyclRefrStart", 0, 0 };
    static const QUMethod slot_6 = {"pageCyclRefrStop", 0, 0 };
    static const QUMethod slot_7 = {"userSel", 0, 0 };
    static const QUMethod slot_8 = {"about", 0, 0 };
    static const QUMethod slot_9 = {"aboutQt", 0, 0 };
    static const QUParameter param_slot_10[] = {
	{ "i", &static_QUType_ptr, "QListViewItem", QUParameter::In }
    };
    static const QUMethod slot_10 = {"selectItem", 1, param_slot_10 };
    static const QUParameter param_slot_11[] = {
	{ "i", &static_QUType_ptr, "QListViewItem", QUParameter::In }
    };
    static const QUMethod slot_11 = {"viewChild", 1, param_slot_11 };
    static const QUParameter param_slot_12[] = {
	{ "i", &static_QUType_ptr, "QListViewItem", QUParameter::In }
    };
    static const QUMethod slot_12 = {"onItem", 1, param_slot_12 };
    static const QUParameter param_slot_13[] = {
	{ "wdg", &static_QUType_ptr, "QWidget", QUParameter::In }
    };
    static const QUMethod slot_13 = {"tabSelect", 1, param_slot_13 };
    static const QUParameter param_slot_14[] = {
	{ "stat", &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_14 = {"checkBoxStChange", 1, param_slot_14 };
    static const QUMethod slot_15 = {"buttonClicked", 0, 0 };
    static const QUParameter param_slot_16[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_16 = {"combBoxActivate", 1, param_slot_16 };
    static const QUParameter param_slot_17[] = {
	{ 0, &static_QUType_ptr, "QListBoxItem", QUParameter::In }
    };
    static const QUMethod slot_17 = {"listBoxGo", 1, param_slot_17 };
    static const QUParameter param_slot_18[] = {
	{ 0, &static_QUType_ptr, "QListBoxItem", QUParameter::In }
    };
    static const QUMethod slot_18 = {"listBoxPopup", 1, param_slot_18 };
    static const QUParameter param_slot_19[] = {
	{ "row", &static_QUType_int, 0, QUParameter::In },
	{ "col", &static_QUType_int, 0, QUParameter::In },
	{ "pos", &static_QUType_varptr, "\x0e", QUParameter::In }
    };
    static const QUMethod slot_19 = {"tablePopup", 3, param_slot_19 };
    static const QUParameter param_slot_20[] = {
	{ "row", &static_QUType_int, 0, QUParameter::In },
	{ "col", &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_20 = {"tableSet", 2, param_slot_20 };
    static const QUMethod slot_21 = {"tableSet", 0, 0 };
    static const QUParameter param_slot_22[] = {
	{ 0, &static_QUType_varptr, "\x1c", QUParameter::In }
    };
    static const QUMethod slot_22 = {"dataTimeChange", 1, param_slot_22 };
    static const QUMethod slot_23 = {"editChange", 0, 0 };
    static const QUParameter param_slot_24[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_24 = {"editLineChange", 1, param_slot_24 };
    static const QUMethod slot_25 = {"applyButton", 0, 0 };
    static const QUMethod slot_26 = {"cancelButton", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "newW()", &slot_0, QMetaData::Private },
	{ "pageUp()", &slot_1, QMetaData::Private },
	{ "pagePrev()", &slot_2, QMetaData::Private },
	{ "pageNext()", &slot_3, QMetaData::Private },
	{ "pageRefresh()", &slot_4, QMetaData::Private },
	{ "pageCyclRefrStart()", &slot_5, QMetaData::Private },
	{ "pageCyclRefrStop()", &slot_6, QMetaData::Private },
	{ "userSel()", &slot_7, QMetaData::Private },
	{ "about()", &slot_8, QMetaData::Private },
	{ "aboutQt()", &slot_9, QMetaData::Private },
	{ "selectItem(QListViewItem*)", &slot_10, QMetaData::Private },
	{ "viewChild(QListViewItem*)", &slot_11, QMetaData::Private },
	{ "onItem(QListViewItem*)", &slot_12, QMetaData::Private },
	{ "tabSelect(QWidget*)", &slot_13, QMetaData::Private },
	{ "checkBoxStChange(int)", &slot_14, QMetaData::Private },
	{ "buttonClicked()", &slot_15, QMetaData::Private },
	{ "combBoxActivate(const QString&)", &slot_16, QMetaData::Private },
	{ "listBoxGo(QListBoxItem*)", &slot_17, QMetaData::Private },
	{ "listBoxPopup(QListBoxItem*)", &slot_18, QMetaData::Private },
	{ "tablePopup(int,int,const QPoint&)", &slot_19, QMetaData::Private },
	{ "tableSet(int,int)", &slot_20, QMetaData::Private },
	{ "tableSet()", &slot_21, QMetaData::Private },
	{ "dataTimeChange(const QDateTime&)", &slot_22, QMetaData::Private },
	{ "editChange()", &slot_23, QMetaData::Private },
	{ "editLineChange(const QString&)", &slot_24, QMetaData::Private },
	{ "applyButton()", &slot_25, QMetaData::Private },
	{ "cancelButton()", &slot_26, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"QTCFG::ConfApp", parentObject,
	slot_tbl, 27,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QTCFG__ConfApp.setMetaObject( metaObj );
    return metaObj;
}

void* QTCFG::ConfApp::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QTCFG::ConfApp" ) )
	return this;
    return QMainWindow::qt_cast( clname );
}

bool QTCFG::ConfApp::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: newW(); break;
    case 1: pageUp(); break;
    case 2: pagePrev(); break;
    case 3: pageNext(); break;
    case 4: pageRefresh(); break;
    case 5: pageCyclRefrStart(); break;
    case 6: pageCyclRefrStop(); break;
    case 7: userSel(); break;
    case 8: about(); break;
    case 9: aboutQt(); break;
    case 10: selectItem((QListViewItem*)static_QUType_ptr.get(_o+1)); break;
    case 11: viewChild((QListViewItem*)static_QUType_ptr.get(_o+1)); break;
    case 12: onItem((QListViewItem*)static_QUType_ptr.get(_o+1)); break;
    case 13: tabSelect((QWidget*)static_QUType_ptr.get(_o+1)); break;
    case 14: checkBoxStChange((int)static_QUType_int.get(_o+1)); break;
    case 15: buttonClicked(); break;
    case 16: combBoxActivate((const QString&)static_QUType_QString.get(_o+1)); break;
    case 17: listBoxGo((QListBoxItem*)static_QUType_ptr.get(_o+1)); break;
    case 18: listBoxPopup((QListBoxItem*)static_QUType_ptr.get(_o+1)); break;
    case 19: tablePopup((int)static_QUType_int.get(_o+1),(int)static_QUType_int.get(_o+2),(const QPoint&)*((const QPoint*)static_QUType_ptr.get(_o+3))); break;
    case 20: tableSet((int)static_QUType_int.get(_o+1),(int)static_QUType_int.get(_o+2)); break;
    case 21: tableSet(); break;
    case 22: dataTimeChange((const QDateTime&)*((const QDateTime*)static_QUType_ptr.get(_o+1))); break;
    case 23: editChange(); break;
    case 24: editLineChange((const QString&)static_QUType_QString.get(_o+1)); break;
    case 25: applyButton(); break;
    case 26: cancelButton(); break;
    default:
	return QMainWindow::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QTCFG::ConfApp::qt_emit( int _id, QUObject* _o )
{
    return QMainWindow::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QTCFG::ConfApp::qt_property( int id, int f, QVariant* v)
{
    return QMainWindow::qt_property( id, f, v);
}

bool QTCFG::ConfApp::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
