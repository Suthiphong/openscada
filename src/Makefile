# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#CC=gcc3
#CXX=g++3
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/OpenScada
pkglibdir = $(libdir)/OpenScada
pkgincludedir = $(includedir)/OpenScada
top_builddir = ..

ACLOCAL = aclocal-1.6
AUTOCONF = autoconf
AUTOMAKE = automake-1.6
AUTOHEADER = autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = tar
AWK = gawk
CC = gcc
CXX = g++
DEPDIR = .deps
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LN_S = ln -s
PACKAGE = OpenScada
RANLIB = ranlib
STRIP = 
VERSION = 0.1
am__include = include
am__quote = 
install_sh = /home/Roman/projects/OpenScada/install-sh

localedir = $(datadir)/locale

SUBDIRS = moduls
INCLUDES = -I../../intl -DLOCALEDIR=\"$(localedir)\"

CXXFLAGS = -O2 -Wall

bin_PROGRAMS = OpenScada 
OpenScada_SOURCES = main.cpp tkernel.cpp tarhives.cpp tbds.cpp tconfig.cpp tcontroller.cpp \
			tmessage.cpp tgrpmodule.cpp tparam.cpp tprotocols.cpp ttransports.cpp \
			tspecials.cpp tcontrollers.cpp ttipcontroller.cpp tparams.cpp tvalue.cpp terror.cpp \
			tguis.cpp tmodschedul.cpp tconfigelem.cpp tparamcontr.cpp tvalueelem.cpp tmodule.cpp

OpenScada_LDFLAGS = $(EXTRA_LDFLAGS) -rdynamic -ldl -lrt
OpenScada_LDADD = 
OpenScada_CXXFLAGS = -DOSC_DEBUG -D_GLIBCPP_DEPRECATED

OpenScada_modules = OpenScada.so
OpenScada_so_SOURCES = tkernel.cpp tarhives.cpp tbds.cpp tconfig.cpp tcontroller.cpp \
			tmessage.cpp tgrpmodule.cpp tparam.cpp tprotocols.cpp ttransports.cpp \
			tspecials.cpp tcontrollers.cpp ttipcontroller.cpp tparams.cpp tvalue.cpp terror.cpp \
			tguis.cpp tmodschedul.cpp tconfigelem.cpp tparamcontr.cpp tvalueelem.cpp tmodule.cpp

OpenScada_so_LDFLAGS = $(EXTRA_LDFLAGS) -shared -export-dynamic -module -avoid-version -ldl -lrt
OpenScada_so_LDADD = 
OpenScada_so_CXXFLAGS = -fPIC -DPIC -D_GLIBCPP_DEPRECATED -DOSC_DEBUG

noinst_PROGRAMS = $(OpenScada_modules)
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = OpenScada$(EXEEXT)
noinst_PROGRAMS = OpenScada.so$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

am_OpenScada_OBJECTS = OpenScada-main.$(OBJEXT) \
	OpenScada-tkernel.$(OBJEXT) OpenScada-tarhives.$(OBJEXT) \
	OpenScada-tbds.$(OBJEXT) OpenScada-tconfig.$(OBJEXT) \
	OpenScada-tcontroller.$(OBJEXT) OpenScada-tmessage.$(OBJEXT) \
	OpenScada-tgrpmodule.$(OBJEXT) OpenScada-tparam.$(OBJEXT) \
	OpenScada-tprotocols.$(OBJEXT) OpenScada-ttransports.$(OBJEXT) \
	OpenScada-tspecials.$(OBJEXT) OpenScada-tcontrollers.$(OBJEXT) \
	OpenScada-ttipcontroller.$(OBJEXT) OpenScada-tparams.$(OBJEXT) \
	OpenScada-tvalue.$(OBJEXT) OpenScada-terror.$(OBJEXT) \
	OpenScada-tguis.$(OBJEXT) OpenScada-tmodschedul.$(OBJEXT) \
	OpenScada-tconfigelem.$(OBJEXT) OpenScada-tparamcontr.$(OBJEXT) \
	OpenScada-tvalueelem.$(OBJEXT) OpenScada-tmodule.$(OBJEXT)
OpenScada_OBJECTS = $(am_OpenScada_OBJECTS)
OpenScada_DEPENDENCIES =
am_OpenScada_so_OBJECTS = OpenScada_so-tkernel.$(OBJEXT) \
	OpenScada_so-tarhives.$(OBJEXT) OpenScada_so-tbds.$(OBJEXT) \
	OpenScada_so-tconfig.$(OBJEXT) \
	OpenScada_so-tcontroller.$(OBJEXT) \
	OpenScada_so-tmessage.$(OBJEXT) \
	OpenScada_so-tgrpmodule.$(OBJEXT) OpenScada_so-tparam.$(OBJEXT) \
	OpenScada_so-tprotocols.$(OBJEXT) \
	OpenScada_so-ttransports.$(OBJEXT) \
	OpenScada_so-tspecials.$(OBJEXT) \
	OpenScada_so-tcontrollers.$(OBJEXT) \
	OpenScada_so-ttipcontroller.$(OBJEXT) \
	OpenScada_so-tparams.$(OBJEXT) OpenScada_so-tvalue.$(OBJEXT) \
	OpenScada_so-terror.$(OBJEXT) OpenScada_so-tguis.$(OBJEXT) \
	OpenScada_so-tmodschedul.$(OBJEXT) \
	OpenScada_so-tconfigelem.$(OBJEXT) \
	OpenScada_so-tparamcontr.$(OBJEXT) \
	OpenScada_so-tvalueelem.$(OBJEXT) \
	OpenScada_so-tmodule.$(OBJEXT)
OpenScada_so_OBJECTS = $(am_OpenScada_so_OBJECTS)
OpenScada_so_DEPENDENCIES =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/OpenScada-main.Po \
	./$(DEPDIR)/OpenScada-tarhives.Po \
	./$(DEPDIR)/OpenScada-tbds.Po \
	./$(DEPDIR)/OpenScada-tconfig.Po \
	./$(DEPDIR)/OpenScada-tconfigelem.Po \
	./$(DEPDIR)/OpenScada-tcontroller.Po \
	./$(DEPDIR)/OpenScada-tcontrollers.Po \
	./$(DEPDIR)/OpenScada-terror.Po \
	./$(DEPDIR)/OpenScada-tgrpmodule.Po \
	./$(DEPDIR)/OpenScada-tguis.Po \
	./$(DEPDIR)/OpenScada-tkernel.Po \
	./$(DEPDIR)/OpenScada-tmessage.Po \
	./$(DEPDIR)/OpenScada-tmodschedul.Po \
	./$(DEPDIR)/OpenScada-tmodule.Po \
	./$(DEPDIR)/OpenScada-tparam.Po \
	./$(DEPDIR)/OpenScada-tparamcontr.Po \
	./$(DEPDIR)/OpenScada-tparams.Po \
	./$(DEPDIR)/OpenScada-tprotocols.Po \
	./$(DEPDIR)/OpenScada-tspecials.Po \
	./$(DEPDIR)/OpenScada-ttipcontroller.Po \
	./$(DEPDIR)/OpenScada-ttransports.Po \
	./$(DEPDIR)/OpenScada-tvalue.Po \
	./$(DEPDIR)/OpenScada-tvalueelem.Po \
	./$(DEPDIR)/OpenScada_so-tarhives.Po \
	./$(DEPDIR)/OpenScada_so-tbds.Po \
	./$(DEPDIR)/OpenScada_so-tconfig.Po \
	./$(DEPDIR)/OpenScada_so-tconfigelem.Po \
	./$(DEPDIR)/OpenScada_so-tcontroller.Po \
	./$(DEPDIR)/OpenScada_so-tcontrollers.Po \
	./$(DEPDIR)/OpenScada_so-terror.Po \
	./$(DEPDIR)/OpenScada_so-tgrpmodule.Po \
	./$(DEPDIR)/OpenScada_so-tguis.Po \
	./$(DEPDIR)/OpenScada_so-tkernel.Po \
	./$(DEPDIR)/OpenScada_so-tmessage.Po \
	./$(DEPDIR)/OpenScada_so-tmodschedul.Po \
	./$(DEPDIR)/OpenScada_so-tmodule.Po \
	./$(DEPDIR)/OpenScada_so-tparam.Po \
	./$(DEPDIR)/OpenScada_so-tparamcontr.Po \
	./$(DEPDIR)/OpenScada_so-tparams.Po \
	./$(DEPDIR)/OpenScada_so-tprotocols.Po \
	./$(DEPDIR)/OpenScada_so-tspecials.Po \
	./$(DEPDIR)/OpenScada_so-ttipcontroller.Po \
	./$(DEPDIR)/OpenScada_so-ttransports.Po \
	./$(DEPDIR)/OpenScada_so-tvalue.Po \
	./$(DEPDIR)/OpenScada_so-tvalueelem.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(OpenScada_SOURCES) $(OpenScada_so_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(OpenScada_SOURCES) $(OpenScada_so_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
OpenScada-main.$(OBJEXT): main.cpp
OpenScada-tkernel.$(OBJEXT): tkernel.cpp
OpenScada-tarhives.$(OBJEXT): tarhives.cpp
OpenScada-tbds.$(OBJEXT): tbds.cpp
OpenScada-tconfig.$(OBJEXT): tconfig.cpp
OpenScada-tcontroller.$(OBJEXT): tcontroller.cpp
OpenScada-tmessage.$(OBJEXT): tmessage.cpp
OpenScada-tgrpmodule.$(OBJEXT): tgrpmodule.cpp
OpenScada-tparam.$(OBJEXT): tparam.cpp
OpenScada-tprotocols.$(OBJEXT): tprotocols.cpp
OpenScada-ttransports.$(OBJEXT): ttransports.cpp
OpenScada-tspecials.$(OBJEXT): tspecials.cpp
OpenScada-tcontrollers.$(OBJEXT): tcontrollers.cpp
OpenScada-ttipcontroller.$(OBJEXT): ttipcontroller.cpp
OpenScada-tparams.$(OBJEXT): tparams.cpp
OpenScada-tvalue.$(OBJEXT): tvalue.cpp
OpenScada-terror.$(OBJEXT): terror.cpp
OpenScada-tguis.$(OBJEXT): tguis.cpp
OpenScada-tmodschedul.$(OBJEXT): tmodschedul.cpp
OpenScada-tconfigelem.$(OBJEXT): tconfigelem.cpp
OpenScada-tparamcontr.$(OBJEXT): tparamcontr.cpp
OpenScada-tvalueelem.$(OBJEXT): tvalueelem.cpp
OpenScada-tmodule.$(OBJEXT): tmodule.cpp
OpenScada$(EXEEXT): $(OpenScada_OBJECTS) $(OpenScada_DEPENDENCIES) 
	@rm -f OpenScada$(EXEEXT)
	$(CXXLINK) $(OpenScada_LDFLAGS) $(OpenScada_OBJECTS) $(OpenScada_LDADD) $(LIBS)
OpenScada_so-tkernel.$(OBJEXT): tkernel.cpp
OpenScada_so-tarhives.$(OBJEXT): tarhives.cpp
OpenScada_so-tbds.$(OBJEXT): tbds.cpp
OpenScada_so-tconfig.$(OBJEXT): tconfig.cpp
OpenScada_so-tcontroller.$(OBJEXT): tcontroller.cpp
OpenScada_so-tmessage.$(OBJEXT): tmessage.cpp
OpenScada_so-tgrpmodule.$(OBJEXT): tgrpmodule.cpp
OpenScada_so-tparam.$(OBJEXT): tparam.cpp
OpenScada_so-tprotocols.$(OBJEXT): tprotocols.cpp
OpenScada_so-ttransports.$(OBJEXT): ttransports.cpp
OpenScada_so-tspecials.$(OBJEXT): tspecials.cpp
OpenScada_so-tcontrollers.$(OBJEXT): tcontrollers.cpp
OpenScada_so-ttipcontroller.$(OBJEXT): ttipcontroller.cpp
OpenScada_so-tparams.$(OBJEXT): tparams.cpp
OpenScada_so-tvalue.$(OBJEXT): tvalue.cpp
OpenScada_so-terror.$(OBJEXT): terror.cpp
OpenScada_so-tguis.$(OBJEXT): tguis.cpp
OpenScada_so-tmodschedul.$(OBJEXT): tmodschedul.cpp
OpenScada_so-tconfigelem.$(OBJEXT): tconfigelem.cpp
OpenScada_so-tparamcontr.$(OBJEXT): tparamcontr.cpp
OpenScada_so-tvalueelem.$(OBJEXT): tvalueelem.cpp
OpenScada_so-tmodule.$(OBJEXT): tmodule.cpp
OpenScada.so$(EXEEXT): $(OpenScada_so_OBJECTS) $(OpenScada_so_DEPENDENCIES) 
	@rm -f OpenScada.so$(EXEEXT)
	$(CXXLINK) $(OpenScada_so_LDFLAGS) $(OpenScada_so_OBJECTS) $(OpenScada_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/OpenScada-main.Po
include ./$(DEPDIR)/OpenScada-tarhives.Po
include ./$(DEPDIR)/OpenScada-tbds.Po
include ./$(DEPDIR)/OpenScada-tconfig.Po
include ./$(DEPDIR)/OpenScada-tconfigelem.Po
include ./$(DEPDIR)/OpenScada-tcontroller.Po
include ./$(DEPDIR)/OpenScada-tcontrollers.Po
include ./$(DEPDIR)/OpenScada-terror.Po
include ./$(DEPDIR)/OpenScada-tgrpmodule.Po
include ./$(DEPDIR)/OpenScada-tguis.Po
include ./$(DEPDIR)/OpenScada-tkernel.Po
include ./$(DEPDIR)/OpenScada-tmessage.Po
include ./$(DEPDIR)/OpenScada-tmodschedul.Po
include ./$(DEPDIR)/OpenScada-tmodule.Po
include ./$(DEPDIR)/OpenScada-tparam.Po
include ./$(DEPDIR)/OpenScada-tparamcontr.Po
include ./$(DEPDIR)/OpenScada-tparams.Po
include ./$(DEPDIR)/OpenScada-tprotocols.Po
include ./$(DEPDIR)/OpenScada-tspecials.Po
include ./$(DEPDIR)/OpenScada-ttipcontroller.Po
include ./$(DEPDIR)/OpenScada-ttransports.Po
include ./$(DEPDIR)/OpenScada-tvalue.Po
include ./$(DEPDIR)/OpenScada-tvalueelem.Po
include ./$(DEPDIR)/OpenScada_so-tarhives.Po
include ./$(DEPDIR)/OpenScada_so-tbds.Po
include ./$(DEPDIR)/OpenScada_so-tconfig.Po
include ./$(DEPDIR)/OpenScada_so-tconfigelem.Po
include ./$(DEPDIR)/OpenScada_so-tcontroller.Po
include ./$(DEPDIR)/OpenScada_so-tcontrollers.Po
include ./$(DEPDIR)/OpenScada_so-terror.Po
include ./$(DEPDIR)/OpenScada_so-tgrpmodule.Po
include ./$(DEPDIR)/OpenScada_so-tguis.Po
include ./$(DEPDIR)/OpenScada_so-tkernel.Po
include ./$(DEPDIR)/OpenScada_so-tmessage.Po
include ./$(DEPDIR)/OpenScada_so-tmodschedul.Po
include ./$(DEPDIR)/OpenScada_so-tmodule.Po
include ./$(DEPDIR)/OpenScada_so-tparam.Po
include ./$(DEPDIR)/OpenScada_so-tparamcontr.Po
include ./$(DEPDIR)/OpenScada_so-tparams.Po
include ./$(DEPDIR)/OpenScada_so-tprotocols.Po
include ./$(DEPDIR)/OpenScada_so-tspecials.Po
include ./$(DEPDIR)/OpenScada_so-ttipcontroller.Po
include ./$(DEPDIR)/OpenScada_so-ttransports.Po
include ./$(DEPDIR)/OpenScada_so-tvalue.Po
include ./$(DEPDIR)/OpenScada_so-tvalueelem.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

OpenScada-main.o: main.cpp
	source='main.cpp' object='OpenScada-main.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-main.Po' tmpdepfile='$(DEPDIR)/OpenScada-main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

OpenScada-main.obj: main.cpp
	source='main.cpp' object='OpenScada-main.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-main.Po' tmpdepfile='$(DEPDIR)/OpenScada-main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-main.obj `cygpath -w main.cpp`

OpenScada-tkernel.o: tkernel.cpp
	source='tkernel.cpp' object='OpenScada-tkernel.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tkernel.Po' tmpdepfile='$(DEPDIR)/OpenScada-tkernel.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tkernel.o `test -f 'tkernel.cpp' || echo '$(srcdir)/'`tkernel.cpp

OpenScada-tkernel.obj: tkernel.cpp
	source='tkernel.cpp' object='OpenScada-tkernel.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tkernel.Po' tmpdepfile='$(DEPDIR)/OpenScada-tkernel.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tkernel.obj `cygpath -w tkernel.cpp`

OpenScada-tarhives.o: tarhives.cpp
	source='tarhives.cpp' object='OpenScada-tarhives.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tarhives.Po' tmpdepfile='$(DEPDIR)/OpenScada-tarhives.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tarhives.o `test -f 'tarhives.cpp' || echo '$(srcdir)/'`tarhives.cpp

OpenScada-tarhives.obj: tarhives.cpp
	source='tarhives.cpp' object='OpenScada-tarhives.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tarhives.Po' tmpdepfile='$(DEPDIR)/OpenScada-tarhives.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tarhives.obj `cygpath -w tarhives.cpp`

OpenScada-tbds.o: tbds.cpp
	source='tbds.cpp' object='OpenScada-tbds.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tbds.Po' tmpdepfile='$(DEPDIR)/OpenScada-tbds.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tbds.o `test -f 'tbds.cpp' || echo '$(srcdir)/'`tbds.cpp

OpenScada-tbds.obj: tbds.cpp
	source='tbds.cpp' object='OpenScada-tbds.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tbds.Po' tmpdepfile='$(DEPDIR)/OpenScada-tbds.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tbds.obj `cygpath -w tbds.cpp`

OpenScada-tconfig.o: tconfig.cpp
	source='tconfig.cpp' object='OpenScada-tconfig.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tconfig.Po' tmpdepfile='$(DEPDIR)/OpenScada-tconfig.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tconfig.o `test -f 'tconfig.cpp' || echo '$(srcdir)/'`tconfig.cpp

OpenScada-tconfig.obj: tconfig.cpp
	source='tconfig.cpp' object='OpenScada-tconfig.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tconfig.Po' tmpdepfile='$(DEPDIR)/OpenScada-tconfig.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tconfig.obj `cygpath -w tconfig.cpp`

OpenScada-tcontroller.o: tcontroller.cpp
	source='tcontroller.cpp' object='OpenScada-tcontroller.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada-tcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tcontroller.o `test -f 'tcontroller.cpp' || echo '$(srcdir)/'`tcontroller.cpp

OpenScada-tcontroller.obj: tcontroller.cpp
	source='tcontroller.cpp' object='OpenScada-tcontroller.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada-tcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tcontroller.obj `cygpath -w tcontroller.cpp`

OpenScada-tmessage.o: tmessage.cpp
	source='tmessage.cpp' object='OpenScada-tmessage.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmessage.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmessage.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmessage.o `test -f 'tmessage.cpp' || echo '$(srcdir)/'`tmessage.cpp

OpenScada-tmessage.obj: tmessage.cpp
	source='tmessage.cpp' object='OpenScada-tmessage.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmessage.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmessage.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmessage.obj `cygpath -w tmessage.cpp`

OpenScada-tgrpmodule.o: tgrpmodule.cpp
	source='tgrpmodule.cpp' object='OpenScada-tgrpmodule.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tgrpmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada-tgrpmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tgrpmodule.o `test -f 'tgrpmodule.cpp' || echo '$(srcdir)/'`tgrpmodule.cpp

OpenScada-tgrpmodule.obj: tgrpmodule.cpp
	source='tgrpmodule.cpp' object='OpenScada-tgrpmodule.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tgrpmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada-tgrpmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tgrpmodule.obj `cygpath -w tgrpmodule.cpp`

OpenScada-tparam.o: tparam.cpp
	source='tparam.cpp' object='OpenScada-tparam.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparam.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparam.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparam.o `test -f 'tparam.cpp' || echo '$(srcdir)/'`tparam.cpp

OpenScada-tparam.obj: tparam.cpp
	source='tparam.cpp' object='OpenScada-tparam.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparam.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparam.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparam.obj `cygpath -w tparam.cpp`

OpenScada-tprotocols.o: tprotocols.cpp
	source='tprotocols.cpp' object='OpenScada-tprotocols.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tprotocols.Po' tmpdepfile='$(DEPDIR)/OpenScada-tprotocols.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tprotocols.o `test -f 'tprotocols.cpp' || echo '$(srcdir)/'`tprotocols.cpp

OpenScada-tprotocols.obj: tprotocols.cpp
	source='tprotocols.cpp' object='OpenScada-tprotocols.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tprotocols.Po' tmpdepfile='$(DEPDIR)/OpenScada-tprotocols.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tprotocols.obj `cygpath -w tprotocols.cpp`

OpenScada-ttransports.o: ttransports.cpp
	source='ttransports.cpp' object='OpenScada-ttransports.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-ttransports.Po' tmpdepfile='$(DEPDIR)/OpenScada-ttransports.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-ttransports.o `test -f 'ttransports.cpp' || echo '$(srcdir)/'`ttransports.cpp

OpenScada-ttransports.obj: ttransports.cpp
	source='ttransports.cpp' object='OpenScada-ttransports.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-ttransports.Po' tmpdepfile='$(DEPDIR)/OpenScada-ttransports.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-ttransports.obj `cygpath -w ttransports.cpp`

OpenScada-tspecials.o: tspecials.cpp
	source='tspecials.cpp' object='OpenScada-tspecials.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tspecials.Po' tmpdepfile='$(DEPDIR)/OpenScada-tspecials.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tspecials.o `test -f 'tspecials.cpp' || echo '$(srcdir)/'`tspecials.cpp

OpenScada-tspecials.obj: tspecials.cpp
	source='tspecials.cpp' object='OpenScada-tspecials.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tspecials.Po' tmpdepfile='$(DEPDIR)/OpenScada-tspecials.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tspecials.obj `cygpath -w tspecials.cpp`

OpenScada-tcontrollers.o: tcontrollers.cpp
	source='tcontrollers.cpp' object='OpenScada-tcontrollers.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tcontrollers.Po' tmpdepfile='$(DEPDIR)/OpenScada-tcontrollers.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tcontrollers.o `test -f 'tcontrollers.cpp' || echo '$(srcdir)/'`tcontrollers.cpp

OpenScada-tcontrollers.obj: tcontrollers.cpp
	source='tcontrollers.cpp' object='OpenScada-tcontrollers.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tcontrollers.Po' tmpdepfile='$(DEPDIR)/OpenScada-tcontrollers.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tcontrollers.obj `cygpath -w tcontrollers.cpp`

OpenScada-ttipcontroller.o: ttipcontroller.cpp
	source='ttipcontroller.cpp' object='OpenScada-ttipcontroller.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-ttipcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada-ttipcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-ttipcontroller.o `test -f 'ttipcontroller.cpp' || echo '$(srcdir)/'`ttipcontroller.cpp

OpenScada-ttipcontroller.obj: ttipcontroller.cpp
	source='ttipcontroller.cpp' object='OpenScada-ttipcontroller.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-ttipcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada-ttipcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-ttipcontroller.obj `cygpath -w ttipcontroller.cpp`

OpenScada-tparams.o: tparams.cpp
	source='tparams.cpp' object='OpenScada-tparams.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparams.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparams.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparams.o `test -f 'tparams.cpp' || echo '$(srcdir)/'`tparams.cpp

OpenScada-tparams.obj: tparams.cpp
	source='tparams.cpp' object='OpenScada-tparams.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparams.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparams.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparams.obj `cygpath -w tparams.cpp`

OpenScada-tvalue.o: tvalue.cpp
	source='tvalue.cpp' object='OpenScada-tvalue.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tvalue.Po' tmpdepfile='$(DEPDIR)/OpenScada-tvalue.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tvalue.o `test -f 'tvalue.cpp' || echo '$(srcdir)/'`tvalue.cpp

OpenScada-tvalue.obj: tvalue.cpp
	source='tvalue.cpp' object='OpenScada-tvalue.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tvalue.Po' tmpdepfile='$(DEPDIR)/OpenScada-tvalue.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tvalue.obj `cygpath -w tvalue.cpp`

OpenScada-terror.o: terror.cpp
	source='terror.cpp' object='OpenScada-terror.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-terror.Po' tmpdepfile='$(DEPDIR)/OpenScada-terror.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-terror.o `test -f 'terror.cpp' || echo '$(srcdir)/'`terror.cpp

OpenScada-terror.obj: terror.cpp
	source='terror.cpp' object='OpenScada-terror.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-terror.Po' tmpdepfile='$(DEPDIR)/OpenScada-terror.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-terror.obj `cygpath -w terror.cpp`

OpenScada-tguis.o: tguis.cpp
	source='tguis.cpp' object='OpenScada-tguis.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tguis.Po' tmpdepfile='$(DEPDIR)/OpenScada-tguis.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tguis.o `test -f 'tguis.cpp' || echo '$(srcdir)/'`tguis.cpp

OpenScada-tguis.obj: tguis.cpp
	source='tguis.cpp' object='OpenScada-tguis.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tguis.Po' tmpdepfile='$(DEPDIR)/OpenScada-tguis.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tguis.obj `cygpath -w tguis.cpp`

OpenScada-tmodschedul.o: tmodschedul.cpp
	source='tmodschedul.cpp' object='OpenScada-tmodschedul.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmodschedul.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmodschedul.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmodschedul.o `test -f 'tmodschedul.cpp' || echo '$(srcdir)/'`tmodschedul.cpp

OpenScada-tmodschedul.obj: tmodschedul.cpp
	source='tmodschedul.cpp' object='OpenScada-tmodschedul.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmodschedul.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmodschedul.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmodschedul.obj `cygpath -w tmodschedul.cpp`

OpenScada-tconfigelem.o: tconfigelem.cpp
	source='tconfigelem.cpp' object='OpenScada-tconfigelem.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tconfigelem.Po' tmpdepfile='$(DEPDIR)/OpenScada-tconfigelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tconfigelem.o `test -f 'tconfigelem.cpp' || echo '$(srcdir)/'`tconfigelem.cpp

OpenScada-tconfigelem.obj: tconfigelem.cpp
	source='tconfigelem.cpp' object='OpenScada-tconfigelem.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tconfigelem.Po' tmpdepfile='$(DEPDIR)/OpenScada-tconfigelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tconfigelem.obj `cygpath -w tconfigelem.cpp`

OpenScada-tparamcontr.o: tparamcontr.cpp
	source='tparamcontr.cpp' object='OpenScada-tparamcontr.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparamcontr.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparamcontr.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparamcontr.o `test -f 'tparamcontr.cpp' || echo '$(srcdir)/'`tparamcontr.cpp

OpenScada-tparamcontr.obj: tparamcontr.cpp
	source='tparamcontr.cpp' object='OpenScada-tparamcontr.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tparamcontr.Po' tmpdepfile='$(DEPDIR)/OpenScada-tparamcontr.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tparamcontr.obj `cygpath -w tparamcontr.cpp`

OpenScada-tvalueelem.o: tvalueelem.cpp
	source='tvalueelem.cpp' object='OpenScada-tvalueelem.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tvalueelem.Po' tmpdepfile='$(DEPDIR)/OpenScada-tvalueelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tvalueelem.o `test -f 'tvalueelem.cpp' || echo '$(srcdir)/'`tvalueelem.cpp

OpenScada-tvalueelem.obj: tvalueelem.cpp
	source='tvalueelem.cpp' object='OpenScada-tvalueelem.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tvalueelem.Po' tmpdepfile='$(DEPDIR)/OpenScada-tvalueelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tvalueelem.obj `cygpath -w tvalueelem.cpp`

OpenScada-tmodule.o: tmodule.cpp
	source='tmodule.cpp' object='OpenScada-tmodule.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmodule.o `test -f 'tmodule.cpp' || echo '$(srcdir)/'`tmodule.cpp

OpenScada-tmodule.obj: tmodule.cpp
	source='tmodule.cpp' object='OpenScada-tmodule.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada-tmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada-tmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada-tmodule.obj `cygpath -w tmodule.cpp`

OpenScada_so-tkernel.o: tkernel.cpp
	source='tkernel.cpp' object='OpenScada_so-tkernel.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tkernel.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tkernel.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tkernel.o `test -f 'tkernel.cpp' || echo '$(srcdir)/'`tkernel.cpp

OpenScada_so-tkernel.obj: tkernel.cpp
	source='tkernel.cpp' object='OpenScada_so-tkernel.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tkernel.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tkernel.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tkernel.obj `cygpath -w tkernel.cpp`

OpenScada_so-tarhives.o: tarhives.cpp
	source='tarhives.cpp' object='OpenScada_so-tarhives.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tarhives.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tarhives.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tarhives.o `test -f 'tarhives.cpp' || echo '$(srcdir)/'`tarhives.cpp

OpenScada_so-tarhives.obj: tarhives.cpp
	source='tarhives.cpp' object='OpenScada_so-tarhives.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tarhives.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tarhives.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tarhives.obj `cygpath -w tarhives.cpp`

OpenScada_so-tbds.o: tbds.cpp
	source='tbds.cpp' object='OpenScada_so-tbds.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tbds.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tbds.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tbds.o `test -f 'tbds.cpp' || echo '$(srcdir)/'`tbds.cpp

OpenScada_so-tbds.obj: tbds.cpp
	source='tbds.cpp' object='OpenScada_so-tbds.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tbds.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tbds.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tbds.obj `cygpath -w tbds.cpp`

OpenScada_so-tconfig.o: tconfig.cpp
	source='tconfig.cpp' object='OpenScada_so-tconfig.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tconfig.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tconfig.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tconfig.o `test -f 'tconfig.cpp' || echo '$(srcdir)/'`tconfig.cpp

OpenScada_so-tconfig.obj: tconfig.cpp
	source='tconfig.cpp' object='OpenScada_so-tconfig.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tconfig.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tconfig.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tconfig.obj `cygpath -w tconfig.cpp`

OpenScada_so-tcontroller.o: tcontroller.cpp
	source='tcontroller.cpp' object='OpenScada_so-tcontroller.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tcontroller.o `test -f 'tcontroller.cpp' || echo '$(srcdir)/'`tcontroller.cpp

OpenScada_so-tcontroller.obj: tcontroller.cpp
	source='tcontroller.cpp' object='OpenScada_so-tcontroller.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tcontroller.obj `cygpath -w tcontroller.cpp`

OpenScada_so-tmessage.o: tmessage.cpp
	source='tmessage.cpp' object='OpenScada_so-tmessage.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmessage.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmessage.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmessage.o `test -f 'tmessage.cpp' || echo '$(srcdir)/'`tmessage.cpp

OpenScada_so-tmessage.obj: tmessage.cpp
	source='tmessage.cpp' object='OpenScada_so-tmessage.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmessage.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmessage.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmessage.obj `cygpath -w tmessage.cpp`

OpenScada_so-tgrpmodule.o: tgrpmodule.cpp
	source='tgrpmodule.cpp' object='OpenScada_so-tgrpmodule.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tgrpmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tgrpmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tgrpmodule.o `test -f 'tgrpmodule.cpp' || echo '$(srcdir)/'`tgrpmodule.cpp

OpenScada_so-tgrpmodule.obj: tgrpmodule.cpp
	source='tgrpmodule.cpp' object='OpenScada_so-tgrpmodule.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tgrpmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tgrpmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tgrpmodule.obj `cygpath -w tgrpmodule.cpp`

OpenScada_so-tparam.o: tparam.cpp
	source='tparam.cpp' object='OpenScada_so-tparam.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparam.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparam.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparam.o `test -f 'tparam.cpp' || echo '$(srcdir)/'`tparam.cpp

OpenScada_so-tparam.obj: tparam.cpp
	source='tparam.cpp' object='OpenScada_so-tparam.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparam.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparam.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparam.obj `cygpath -w tparam.cpp`

OpenScada_so-tprotocols.o: tprotocols.cpp
	source='tprotocols.cpp' object='OpenScada_so-tprotocols.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tprotocols.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tprotocols.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tprotocols.o `test -f 'tprotocols.cpp' || echo '$(srcdir)/'`tprotocols.cpp

OpenScada_so-tprotocols.obj: tprotocols.cpp
	source='tprotocols.cpp' object='OpenScada_so-tprotocols.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tprotocols.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tprotocols.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tprotocols.obj `cygpath -w tprotocols.cpp`

OpenScada_so-ttransports.o: ttransports.cpp
	source='ttransports.cpp' object='OpenScada_so-ttransports.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-ttransports.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-ttransports.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-ttransports.o `test -f 'ttransports.cpp' || echo '$(srcdir)/'`ttransports.cpp

OpenScada_so-ttransports.obj: ttransports.cpp
	source='ttransports.cpp' object='OpenScada_so-ttransports.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-ttransports.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-ttransports.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-ttransports.obj `cygpath -w ttransports.cpp`

OpenScada_so-tspecials.o: tspecials.cpp
	source='tspecials.cpp' object='OpenScada_so-tspecials.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tspecials.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tspecials.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tspecials.o `test -f 'tspecials.cpp' || echo '$(srcdir)/'`tspecials.cpp

OpenScada_so-tspecials.obj: tspecials.cpp
	source='tspecials.cpp' object='OpenScada_so-tspecials.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tspecials.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tspecials.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tspecials.obj `cygpath -w tspecials.cpp`

OpenScada_so-tcontrollers.o: tcontrollers.cpp
	source='tcontrollers.cpp' object='OpenScada_so-tcontrollers.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tcontrollers.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tcontrollers.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tcontrollers.o `test -f 'tcontrollers.cpp' || echo '$(srcdir)/'`tcontrollers.cpp

OpenScada_so-tcontrollers.obj: tcontrollers.cpp
	source='tcontrollers.cpp' object='OpenScada_so-tcontrollers.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tcontrollers.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tcontrollers.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tcontrollers.obj `cygpath -w tcontrollers.cpp`

OpenScada_so-ttipcontroller.o: ttipcontroller.cpp
	source='ttipcontroller.cpp' object='OpenScada_so-ttipcontroller.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-ttipcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-ttipcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-ttipcontroller.o `test -f 'ttipcontroller.cpp' || echo '$(srcdir)/'`ttipcontroller.cpp

OpenScada_so-ttipcontroller.obj: ttipcontroller.cpp
	source='ttipcontroller.cpp' object='OpenScada_so-ttipcontroller.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-ttipcontroller.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-ttipcontroller.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-ttipcontroller.obj `cygpath -w ttipcontroller.cpp`

OpenScada_so-tparams.o: tparams.cpp
	source='tparams.cpp' object='OpenScada_so-tparams.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparams.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparams.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparams.o `test -f 'tparams.cpp' || echo '$(srcdir)/'`tparams.cpp

OpenScada_so-tparams.obj: tparams.cpp
	source='tparams.cpp' object='OpenScada_so-tparams.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparams.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparams.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparams.obj `cygpath -w tparams.cpp`

OpenScada_so-tvalue.o: tvalue.cpp
	source='tvalue.cpp' object='OpenScada_so-tvalue.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tvalue.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tvalue.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tvalue.o `test -f 'tvalue.cpp' || echo '$(srcdir)/'`tvalue.cpp

OpenScada_so-tvalue.obj: tvalue.cpp
	source='tvalue.cpp' object='OpenScada_so-tvalue.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tvalue.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tvalue.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tvalue.obj `cygpath -w tvalue.cpp`

OpenScada_so-terror.o: terror.cpp
	source='terror.cpp' object='OpenScada_so-terror.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-terror.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-terror.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-terror.o `test -f 'terror.cpp' || echo '$(srcdir)/'`terror.cpp

OpenScada_so-terror.obj: terror.cpp
	source='terror.cpp' object='OpenScada_so-terror.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-terror.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-terror.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-terror.obj `cygpath -w terror.cpp`

OpenScada_so-tguis.o: tguis.cpp
	source='tguis.cpp' object='OpenScada_so-tguis.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tguis.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tguis.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tguis.o `test -f 'tguis.cpp' || echo '$(srcdir)/'`tguis.cpp

OpenScada_so-tguis.obj: tguis.cpp
	source='tguis.cpp' object='OpenScada_so-tguis.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tguis.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tguis.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tguis.obj `cygpath -w tguis.cpp`

OpenScada_so-tmodschedul.o: tmodschedul.cpp
	source='tmodschedul.cpp' object='OpenScada_so-tmodschedul.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmodschedul.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmodschedul.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmodschedul.o `test -f 'tmodschedul.cpp' || echo '$(srcdir)/'`tmodschedul.cpp

OpenScada_so-tmodschedul.obj: tmodschedul.cpp
	source='tmodschedul.cpp' object='OpenScada_so-tmodschedul.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmodschedul.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmodschedul.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmodschedul.obj `cygpath -w tmodschedul.cpp`

OpenScada_so-tconfigelem.o: tconfigelem.cpp
	source='tconfigelem.cpp' object='OpenScada_so-tconfigelem.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tconfigelem.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tconfigelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tconfigelem.o `test -f 'tconfigelem.cpp' || echo '$(srcdir)/'`tconfigelem.cpp

OpenScada_so-tconfigelem.obj: tconfigelem.cpp
	source='tconfigelem.cpp' object='OpenScada_so-tconfigelem.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tconfigelem.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tconfigelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tconfigelem.obj `cygpath -w tconfigelem.cpp`

OpenScada_so-tparamcontr.o: tparamcontr.cpp
	source='tparamcontr.cpp' object='OpenScada_so-tparamcontr.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparamcontr.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparamcontr.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparamcontr.o `test -f 'tparamcontr.cpp' || echo '$(srcdir)/'`tparamcontr.cpp

OpenScada_so-tparamcontr.obj: tparamcontr.cpp
	source='tparamcontr.cpp' object='OpenScada_so-tparamcontr.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tparamcontr.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tparamcontr.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tparamcontr.obj `cygpath -w tparamcontr.cpp`

OpenScada_so-tvalueelem.o: tvalueelem.cpp
	source='tvalueelem.cpp' object='OpenScada_so-tvalueelem.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tvalueelem.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tvalueelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tvalueelem.o `test -f 'tvalueelem.cpp' || echo '$(srcdir)/'`tvalueelem.cpp

OpenScada_so-tvalueelem.obj: tvalueelem.cpp
	source='tvalueelem.cpp' object='OpenScada_so-tvalueelem.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tvalueelem.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tvalueelem.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tvalueelem.obj `cygpath -w tvalueelem.cpp`

OpenScada_so-tmodule.o: tmodule.cpp
	source='tmodule.cpp' object='OpenScada_so-tmodule.o' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmodule.o `test -f 'tmodule.cpp' || echo '$(srcdir)/'`tmodule.cpp

OpenScada_so-tmodule.obj: tmodule.cpp
	source='tmodule.cpp' object='OpenScada_so-tmodule.obj' libtool=no \
	depfile='$(DEPDIR)/OpenScada_so-tmodule.Po' tmpdepfile='$(DEPDIR)/OpenScada_so-tmodule.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OpenScada_so_CXXFLAGS) $(CXXFLAGS) -c -o OpenScada_so-tmodule.obj `cygpath -w tmodule.cpp`
CXXDEPMODE = depmode=gcc3
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	clean-recursive distclean distclean-compile distclean-depend \
	distclean-generic distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive


# compl_serv_LDADD = @INTLLIBS@ @ALLOCA@

#noinst_LTLIBRARIES = server_lib.la
#server_lib_la_SOURCES = server_lib.cc
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
